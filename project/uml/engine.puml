@startuml

package Transport {
    class Connection
    Connection : execute_command()
    Connection : put_file()
    Connection : fetch_file()
    Connection : close()
}

Package Engine {
    class PlaybookExecutor
    PlaybookExecutor : inventoryManager
    PlaybookExecutor : options
    PlaybookExecutor : passwords
    PlaybookExecutor : run()
    PlaybookExecutor *- TaskQueueManager

    class StrategyBase
    StrategyBase : run(PlayIterator, PlayContext)
    StrategyBase ..> WorkerProcess : <<instantiate>>
    StrategyBase : inventoryManager
    StrategyBase *-- TaskQueueManager

    class TaskQueueManager
    TaskQueueManager : options
    TaskQueueManager : passwords
    TaskQueueManager : run(Play)
    TaskQueueManager : load_callbacks()
    TaskQueueManager : send_callback()
    TaskQueueManager ..> StrategyBase : <<instantiate>>
    TaskQueueManager ..> PlayIterator : <<instantiate>>
    TaskQueueManager ..> PlayContext : <<instantiate>>
    TaskQueueManager : inventoryManager

    class Play
    Play : List<Role> roles
    Play : List<String> hosts
    Play *- "*" Task
    Play : String strategy

    class PlayContext
    PlayContext : boolean check_mode

    class Task
    Task ..> ActionBase : <<instantiate>>

    class ActionBase
    ActionBase *-- Task
    ActionBase *- PlayContext
    ActionBase *- Connection
    ActionBase : run()


    class TaskExecutor
    TaskExecutor : run()
    TaskExecutor : host
    TaskExecutor *- Task
    TaskExecutor *-- PlayContext
    TaskExecutor *--- Connection
    TaskExecutor ..> ActionBase : <<instantiate>>

    class PlayIterator
    PlayIterator *-- Play

    class WorkerProcess
    WorkerProcess : run()
    WorkerProcess : host
    WorkerProcess *- Task
    WorkerProcess *-- PlayContext
    WorkerProcess *- Connection
    WorkerProcess ..> TaskExecutor : <<instantiate>>
}

@enduml
