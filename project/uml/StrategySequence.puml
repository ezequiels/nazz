@startuml
participant PlayExecutionStrategy
participant PluginLoader
participant ConcurrencyStrategy #greenYellow
PlayExecutionStrategy->PluginLoader:get(concurrencyStrategyName, self)
create ConcurrencyStrategy
PluginLoader->ConcurrencyStrategy: init(playExecutionStrategy)
PlayExecutionStrategy<--PluginLoader: return strategy
PlayExecutionStrategy->ConcurrencyStrategy: run(play_iterator, play_context)

loop for each task in play
create multiprocessing.Process
ConcurrencyStrategy->multiprocessing.Process: init(result_q, host, task, play_context)
activate multiprocessing.Process
participant Task #greenYellow
activate Task
multiprocessing.Process->Task: run()
end loop

ConcurrencyStrategy<-->Task: synchronize on\nresult_q to wait for\ntasks to complete
deactivate Task
deactivate multiprocessing.Process

PlayExecutionStrategy<--ConcurrencyStrategy: return response
PlayExecutionStrategy->ConcurrencyStrategy: cleanup()
PlayExecutionStrategy<--ConcurrencyStrategy: return after any\norphaned processes\nare terminated
@enduml