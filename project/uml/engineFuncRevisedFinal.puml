@startuml

skinparam backgroundcolor transparent

package "Utilities Layer" {

    abstract Connection
    Connection : execute_command()
    Connection : put_file()
    Connection : fetch_file()
    Connection : close()
}

Package "CLI Layer" {
    class PlaybookCLI
}

note as n1
Inventory

  (YAML)
end note

n1..> PlaybookCLI

note as n2
PlaybookImplementation

  (YAML)
end note

n2..> PlaybookCLI


Package "Domain Layer" {

    class PlaybookImplementation
    PlaybookImplementation : List<Host>
'    PlaybookImplementation -> PlayImplementation : run(host)
    PlaybookCLI --> PlaybookImplementation : run()

    class PlayImplementation
'    PlayImplementation -> TaskImplementation : run()

    class TaskImplementation
'    TaskImplementation -> Action : run()

    abstract Action
'    Action : run()
    Action ---> Connection : put_file()
    Action --> Connection : execute_command()
    Action <.. Connection : response
}

Package "Infrastructure Layer" {

    abstract PlaybookExecutionStrategy
'    PlaybookExecutor : run()
        PlaybookImplementation --> PlaybookExecutionStrategy : run(host)
        PlaybookExecutionStrategy --> PlayImplementation : run(host)

    abstract PlayExecutionStrategy
        PlayImplementation --> PlayExecutionStrategy : run()
        PlayExecutionStrategy --> TaskImplementation : run()
'        TaskQueueManager <.. TaskImplementation : result

'    class ConcurrencyStrategy
'    StrategyBase : run(PlayIterator, PlayContext)
'    StrategyBase -> WorkerProcess : run()
'    StrategyBase <. WorkerProcess : result

    abstract TaskExecutionStrategy
        TaskImplementation --> TaskExecutionStrategy : run()
        TaskExecutionStrategy --> Action : run()
'    TaskExecutor : host
'    TaskExecutor -> ActionBase : run()
'    TaskExecutor <.. ActionBase : data

}

@enduml
