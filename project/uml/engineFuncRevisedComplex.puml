@startuml

skinparam backgroundcolor transparent

package "Utilities Layer" {

    abstract Connection
    Connection : execute_command()
    Connection : put_file()
    Connection : fetch_file()
    Connection : close()
}

Package "CLI Layer" {
    class PlaybookCLI
}

note as n1
Inventory

  (YAML)
end note

n1..> PlaybookCLI

note as n2
PlaybookImplementation

  (YAML)
end note

n2..> PlaybookCLI


Package "Domain Layer" {

    class PlaybookImplementation
    PlaybookImplementation : List<Host>
'    PlaybookImplementation -> PlayImplementation : run(host)
    PlaybookCLI --> PlaybookImplementation : run()

    class PlayImplementation
'    PlayImplementation -> TaskImplementation : run()

    class TaskImplementation
'    TaskImplementation -> ActionImplementation : run()

    class ActionImplementation
'    ActionImplementation : run()
    ActionImplementation ---> Connection : put_file()
    ActionImplementation --> Connection : execute_command()
    ActionImplementation <.. Connection : response
}

Package "Infrastructure Layer" {

    class PlaybookExecutor
'    PlaybookExecutor : run()
        PlaybookImplementation --> PlaybookExecutor : run(host)
        PlaybookExecutor --> PlayImplementation : run(host)

    class TaskQueueManager
        PlayImplementation --> TaskQueueManager : run()
        TaskQueueManager --> TaskImplementation : run()
'        TaskQueueManager <.. TaskImplementation : result

'    class ConcurrencyStrategyBase
'    StrategyBase : run(PlayIterator, PlayContext)
'    StrategyBase -> WorkerProcess : run()
'    StrategyBase <. WorkerProcess : result

    class TaskExecutor
        TaskImplementation --> TaskExecutor : run()
        TaskExecutor --> ActionImplementation : run()
'    TaskExecutor : host
'    TaskExecutor -> ActionBase : run()
'    TaskExecutor <.. ActionBase : data

}



@enduml
